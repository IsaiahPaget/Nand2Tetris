CHIP JumpCondition {

    /*
        the purpose of this chip to abstract the tedious logic for selecting
        the jump condition.
    */

    IN  instruction[16],
        zr,
        ng;

    OUT out;

    PARTS:
        Not(in=ng,out=pos);
        Not(in=zr,out=nzr);
        And(a=instruction[15],b=instruction[0],out=jgt);
        And(a=pos,b=nzr,out=posnzr);
        And(a=jgt,b=posnzr,out=ld1);

        And(a=instruction[15],b=instruction[1],out=jeq);
        And(a=jeq,b=zr,out=ld2);

        And(a=instruction[15],b=instruction[2],out=jlt);
        And(a=jlt,b=ng,out=ld3);

        Or(a=ld1,b=ld2,out=ldt);
        Or(a=ld3,b=ldt,out=out);

}