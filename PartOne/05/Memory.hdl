// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/05/Memory.hdl

/**
 * The complete address space of the Hack computer's memory,
 * including RAM and memory-mapped I/O. 
 * The chip facilitates read and write operations, as follows:
 *     Read:  out(t) = Memory[address(t)](t)
 *     Write: if load(t-1) then Memory[address(t-1)](t) = in(t-1)
 * In words: the chip always outputs the value stored at the memory 
 * location specified by address. If load==1, the in value is loaded 
 * into the memory location specified by address. This value becomes 
 * available through the out output from the next time step onward.
 * Address space rules:
 * Only the upper 16K+8K+1 words of the Memory chip are used. 
 * Access to address>0x6000 is invalid. Access to any address in 
 * the range 0x4000-0x5FFF results in accessing the screen memory 
 * map. Access to address 0x6000 results in accessing the keyboard 
 * memory map. The behavior in these addresses is described in the 
 * Screen and Keyboard chip specifications given in the book.
 */

// CHIP RAM16K {
//     IN in[16], load, address[14];
//     OUT out[16];

//     PARTS:
//         DMux4Way(in=load,sel=address[12..13],a=a,b=b,c=c,d=d);

//         RAM4K(in=in,load=a,address=address[0..11],out=oa);
//         RAM4K(in=in,load=b,address=address[0..11],out=ob);
//         RAM4K(in=in,load=c,address=address[0..11],out=oc);
//         RAM4K(in=in,load=d,address=address[0..11],out=od);

//         Mux4Way16(a=oa,b=ob,c=oc,d=od,sel=address[12..13],out=out);
// }

CHIP Memory {
    IN in[16], load, address[15];
    OUT out[16];

    PARTS:

    DMux(in = load, sel = address[14], a = inRAM, b = inIO);
    DMux(in = inIO, sel = address[13], a = inSCREEN, b = inKEYBOARD);

    RAM16K(in = in, load = inRAM, address = address[0..13], out = outRAM);
    Screen(in = in, load = inSCREEN, address = address[0..12], out = outSCREEN);
    Keyboard(out = outKEYBOARD);

    Mux16(a = outSCREEN, b = outKEYBOARD, sel = address[13], out = outIO);
    Mux16(a = outRAM, b = outIO, sel = address[14], out = out);
}